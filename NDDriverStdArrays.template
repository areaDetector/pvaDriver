#===================================================
# Template file: NDDriverStdArrays.template
# Database for the records specific to the NDDriverStdArrays driver
# David Vine
# September 28, 2016

include ADBase.template

record(mbbo, "$(P)$(R)CallbackMode")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_CALLBACK_MODE")
    field(ZRVL, "0")
    field(ZRST, "On update")
    field(ONVL, "1")
    field(ONST, "On complete")
    field(TWVL, "2")
    field(TWST, "On command")
    field(VAL,  1)
}

record(mbbi, "$(P)$(R)CallbackMode_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_CALLBACK_MODE")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "On update")
    field(ONVL, "1")
    field(ONST, "On complete")
    field(TWVL, "2")
    field(TWST, "On command")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)DoCallbacks")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_DO_CALLBACKS")
    field(ZNAM, "Done")
    field(ONAM, "Do")
    field(VAL,  1)
}
record(bo, "$(P)$(R)AppendMode")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_APPEND_MODE")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(VAL,  1)
}

record(bi, "$(P)$(R)AppendMode_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_APPEND_MODE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
}

record(longin, "$(P)$(R)NumElements_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_NUM_ELEMENTS")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)NextElement")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_NEXT_ELEMENT")
}

record(longin, "$(P)$(R)NextElement_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_NEXT_ELEMENT")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)NDimensions")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_NDIMENSIONS")
}

record(longin, "$(P)$(R)NDimensions_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_NDIMENSIONS")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)Dimensions")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32ArrayOut")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_DIMENSIONS")
    field(FTVL, "LONG")
    field(NELM, "10")
}

record(waveform, "$(P)$(R)ArrayIn")
{
    field(DTYP, "asyn$(TYPE)ArrayOut")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NDSA_ARRAY_DATA")
    field(FTVL, "$(FTVL)")
    field(NELM, "$(NELEMENTS)")
}
