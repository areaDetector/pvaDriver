# Database for the records specific to the Prosilica cameras
# Mark Rivers
# March 27, 2008

###############################################################################
#  These records are for network and frame statistics                         #
###############################################################################
record(longout, "$(P)$(R)PSReadStatistics")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_READ_STATISTICS")
   field(SCAN, "5 second")
}

record(stringin, "$(P)$(R)PSDriverType")
{
   field(PINI, "1")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_DRIVER_TYPE")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)PSFilterVersion")
{
   field(PINI, "1")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_FILTER_VERSION")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)PSFrameRate")
{
   field(PINI, "1")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_FRAME_RATE")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSFramesCompleted")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_FRAMES_COMPLETED")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSFramesDropped")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_FRAMES_DROPPED")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSPacketsErroneous")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_PACKETS_ERRONEOUS")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSPacketsMissed")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_PACKETS_MISSED")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSPacketsReceived")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_PACKETS_RECEIVED")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSPacketsRequested")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_PACKETS_REQUESTED")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSPacketsResent")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_PACKETS_RESENT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)PSBadFrameCounter")
{
   field(PINI, "1")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PS_BAD_FRAME_COUNTER")
   field(SCAN, "I/O Intr")
}


###############################################################################
#  Note: The following are records defined in ADAsyn.template.                #
#        We are changing some of the fields here to reflect valid values for  #
#        Prosilica                                                            #
###############################################################################

###############################################################################
#  These records control the trigger mode.                                    # 
###############################################################################
record(mbbo, "$(P)$(R)TriggerMode")
{
   field(ZRST, "Free Run")
   field(ZRVL, "0")
   field(ONST, "Sync In 1")
   field(ONVL, "1")
   field(TWST, "Sync In 2")
   field(TWVL, "2")
   field(THST, "Sync In 3")
   field(THVL, "3")
   field(FRST, "Sync In 4")
   field(FRVL, "4")
   field(FVST, "Fixed Rate")
   field(FVVL, "5")
   field(SXST, "Software")
   field(SXVL, "6")
 }

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
   field(ZRST, "Free Run")
   field(ZRVL, "0")
   field(ONST, "Sync In 1")
   field(ONVL, "1")
   field(TWST, "Sync In 2")
   field(TWVL, "2")
   field(THST, "Sync In 3")
   field(THVL, "3")
   field(FRST, "Sync In 4")
   field(FRVL, "4")
   field(FVST, "Fixed Rate")
   field(FVVL, "5")
   field(SXST, "Software")
   field(SXVL, "6")
   field(SCAN, "I/O Intr")
}

###############################################################################
#  These records control the file format.                                     # 
###############################################################################
record(mbbo, "$(P)$(R)FileFormat")
{
    field(ZRST, "TIFF")
    field(ZRVL, "0")
    field(ONST, "Invalid")
    field(ONVL, "1")
}

record(mbbi, "$(P)$(R)FileFormat_RBV")
{
    field(ZRST, "TIFF")
    field(ZRVL, "0")
    field(ONST, "Invalid")
    field(ONVL, "1")
}
